<Application x:Class="UnitBattleGame.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:UnitBattleGame">
    <Application.Resources>
        <Style TargetType="Button" x:Key="Cell">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Opacity" Value="1" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding Selected}"  Value="True">
                    <Setter Property="BorderThickness" Value="2" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Selected}"  Value="False">
                    <Setter Property="BorderThickness" Value="0" />
                </DataTrigger>

                <DataTrigger Binding="{Binding IsMovingArea}"  Value="True">
                    <Setter Property="Opacity" Value="0.5" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMovingArea}"  Value="False">
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="TextBlock" x:Key="InscriptionType">
            <Setter Property="Height" Value="20" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontStyle" Value="Italic" />
            <Setter Property="FontFamily" Value="Blackadder ITC" />
        </Style>

        <Style TargetType="TextBlock" x:Key="BoldInscriptionType">
            <Setter Property="Height" Value="20" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontStyle" Value="Italic" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        
        <Style x:Key="MyFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid Margin="3 2">
                            <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                            <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="GelButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootElement">
                            <!-- drop shadow - needs to be blurred for correct effect -->
                            <Rectangle Fill="#40000000" Margin="1,1,0,0" RadiusX="6" RadiusY="6">
                                <Rectangle.BitmapEffect>
                                    <BlurBitmapEffect Radius="3" />
                                </Rectangle.BitmapEffect>
                            </Rectangle>
                            <Grid x:Name="mainButton"
                                Margin="0,0,1,1"
                                RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="0.0" Y="0.0"/>
                                        <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Rectangle x:Name="mainRect" Fill="{TemplateBinding Background}" RadiusX="6" RadiusY="6">
                                </Rectangle>

                                <!-- transparent rect -->
                                <Rectangle x:Name="glowRect" Margin="1,1,1,1" RadiusX="5" RadiusY="5">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0" Color="#EFFFFFFF"/>
                                            <GradientStop Offset="1" Color="#00FFFFFF"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>

                                <ContentPresenter HorizontalAlignment="Center"
                             Margin="4,0,4,0"
                             Content="{TemplateBinding Content}"
                             VerticalAlignment="Center" />

                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="mainButton" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TransformGroup>
                                            <TranslateTransform X="0.0" Y="0.0"/>
                                            <ScaleTransform ScaleX="1.03" ScaleY="1.03" />
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="#FF4788c8" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="mainButton" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TransformGroup>
                                            <TranslateTransform X="1" Y="1"/>
                                            <ScaleTransform ScaleX="1.03" ScaleY="1.03" />
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="StartMove" BasedOn="{StaticResource GelButton}">
            <Setter Property="Visibility" Value="Hidden" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding CanStartMove}"  Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding CanStartMove}"  Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="Move" BasedOn="{StaticResource GelButton}">
            <Setter Property="Visibility" Value="Hidden" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding CanMove}"  Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding CanMove}"  Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="Attack" BasedOn="{StaticResource GelButton}">
            <Setter Property="Visibility" Value="Hidden" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding CanAttack}"  Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding CanAttack}"  Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="Cancel" BasedOn="{StaticResource GelButton}">
            <Setter Property="Visibility" Value="Hidden" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding CanCancel}"  Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding CanCancel}"  Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock" x:Key="Damage" BasedOn="{StaticResource InscriptionType}">
            <Setter Property="Visibility" Value="Hidden" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ExistDamage}"  Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ExistDamage}"  Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>


    </Application.Resources>
</Application>
